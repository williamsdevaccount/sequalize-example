{"version":3,"sources":["../src/app.js"],"names":["app","disable","use","skip","get","json","urlencoded","extended"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,MAAM,wBAAZ;AACAA,IAAIC,OAAJ,CAAY,cAAZ;;AAEA;;AAEAD,IAAIE,GAAJ,CAAQ,sBAAO,KAAP,EAAc;AACpBC,QAAM,MAAMH,IAAII,GAAJ,CAAQ,KAAR,MAAmB;AADX,CAAd,CAAR;AAGAJ,IAAIE,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;AACAL,IAAIE,GAAJ,CAAQ,qBAAWI,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEA;AACAP,IAAIE,GAAJ,CAAQ,GAAR;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;kBAEeF,G","file":"app.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport logger from 'morgan';\nimport bodyParser from 'body-parser';\nimport routes from './routes/index';\n\nconst app = express();\napp.disable('x-powered-by');\n\n// View engine setup\n\napp.use(logger('dev', {\n  skip: () => app.get('env') === 'test'\n}));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n// Routes\napp.use('/', routes);\n\n// Catch 404 and forward to error handler\n// app.use((req, res, next) => {\n//   const err = new Error('Not Found');\n//   err.status = 404;\n//   next(err);\n// });\n\n// Error handler\n// app.use((err, req, res, next) => { // eslint-disable-line no-unused-vars\n//   res\n//     .status(err.status || 500)\n//     .render('error', {\n//       message: err.message\n//     });\n// });\n\nexport default app;\n"]}